name: Create a release

on:
  push:
    branches:
      - master
      - main

jobs:
  check_release_message:
    name: Check commit message for "release"
    runs-on: ubuntu-latest
    outputs:
      contains_release: ${{ steps.check_commit_message.outputs.contains_release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check commit message for "release"
        id: check_commit_message
        run: echo "contains_release=$(if git log --format=%B -n 1 ${{ github.sha }} | grep -qE '^release'; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

      - run: echo "contains_release ${{ steps.check_commit_message.outputs.contains_release }}"

  add_release_tag:
    name: Add release tag
    runs-on: ubuntu-latest
    needs: check_release_message
    if: ${{ needs.check_release_message.outputs.contains_release == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get package name from commit message
        id: package_name
        run: |
          PACKAGE_NAME=$(git log --format=%B -n 1 ${{ github.sha }} | grep -E '^release\([^)]*\)' | sed -E 's/^release\(([^)]*)\).*/\1/')
          printf "package_name=%s\n" "$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.com/

      - name: Add release tag
        run: node ./scripts/release.js
        env:
          PACKAGE_NAME: ${{ steps.package_name.outputs.package_name }}
          github_token: ${{ secrets.ACTION_SECRET }}
          github_sha: ${{ github.sha }}
